// <auto-generated />
using System;
using Demo.DbMigrator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

namespace Demo.DbMigrator.Migrations
{
    [DbContext(typeof(CustomContext))]
    partial class CustomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Demo.DbMigrator.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasComment("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("");

                    b.HasKey("Id");

                    b.HasIndex("CreateTime");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("Demo.DbMigrator.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasComment("主键");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasComment("商品数量");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("创建时间");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasComment("订单名");

                    b.Property<string>("OrderNum")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("订单号");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer")
                        .HasComment("订单类型 0=未知 1=正常");

                    b.Property<NpgsqlTsVector>("SearchVector")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasComment("")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "Name", "OrderNum" });

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]")
                        .HasComment("");

                    b.HasKey("Id");

                    b.HasIndex("SearchVector")
                        .HasMethod("GIN");

                    b.HasIndex("Tags")
                        .HasMethod("GIN");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Demo.DbMigrator.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("主键");

                    b.Property<string>("OrderId")
                        .HasColumnType("text")
                        .HasComment("订单Id");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Demo.DbMigrator.OrderItem", b =>
                {
                    b.HasOne("Demo.DbMigrator.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Demo.DbMigrator.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
